package minesweeper.swingui;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import minesweeper.BestTimes;
import minesweeper.DatabaseSetting;
import minesweeper.Minesweeper;

/**Dialog for show best times in database
 *
 * @author ÄŽuri
 */
public class BestTimesDialog extends javax.swing.JDialog {

    private BestTimes bestTimes;
    private int times;
    private int order;

    /**
     * Creates new form BestTimesDialog
     *
     * @param parent
     * @param modal
     */
    public BestTimesDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        setLocationRelativeTo(this);
        bestTimes = Minesweeper.getInstance().getBestTimes();
        initComponents();
        jTextArea1.setText(Minesweeper.getInstance().getBestTimes().toString());
    }

    /**
     * Delete players form BestTimes Database
     */
    private void deletePlayerTime() {
        try {
            Class.forName(DatabaseSetting.DRIVER_CLASS);
            Connection connection = DriverManager.getConnection(DatabaseSetting.URL, DatabaseSetting.USER, DatabaseSetting.PASSWORD);
            PreparedStatement pstm = connection.prepareStatement(DatabaseSetting.Delete());
            pstm.setInt(1, times);
            pstm.execute();
            pstm.close();
            connection.close();
        } catch (Exception ex) {
            System.out.println("Exception occured during saving high score to database: " + ex.getMessage());
        }
        jTextArea1.setText(bestTimes.toString());
        this.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        button1 = new java.awt.Button();
        jDialog1 = new javax.swing.JDialog();
        closeButton = new java.awt.Button();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        JTextFieldDeleteTimes = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        JTextFieldDeleteNames = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButtonSEC = new javax.swing.JButton();
        jButtonPOST = new javax.swing.JButton();

        button1.setLabel("button1");

        jDialog1.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jDialog1.getContentPane().setLayout(new javax.swing.BoxLayout(jDialog1.getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        closeButton.setActionCommand("OK");
        closeButton.setLabel("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        JTextFieldDeleteTimes.setText("0");
        JTextFieldDeleteTimes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JTextFieldDeleteTimesActionPerformed(evt);
            }
        });

        jLabel1.setText("sec");

        jLabel2.setText("position");

        JTextFieldDeleteNames.setText("0");
        JTextFieldDeleteNames.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JTextFieldDeleteNamesActionPerformed(evt);
            }
        });

        jLabel3.setText("Reset players with times over");

        jLabel4.setText("Reset players from");

        jButtonSEC.setText("ok");
        jButtonSEC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSECActionPerformed(evt);
            }
        });

        jButtonPOST.setText("ok");
        jButtonPOST.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPOSTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(JTextFieldDeleteTimes, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(JTextFieldDeleteNames, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonSEC)
                            .addComponent(jButtonPOST, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSEC)
                    .addComponent(jLabel3)
                    .addComponent(JTextFieldDeleteTimes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonPOST)
                    .addComponent(jLabel2)
                    .addComponent(JTextFieldDeleteNames, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeButtonActionPerformed

    private void JTextFieldDeleteTimesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JTextFieldDeleteTimesActionPerformed
        try {
            this.times = Integer.parseInt(evt.getActionCommand());
        } catch (NumberFormatException e) {
            System.err.println("Wrong time format!");
        }
        deletePlayerTime();
    }//GEN-LAST:event_JTextFieldDeleteTimesActionPerformed

    private void JTextFieldDeleteNamesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JTextFieldDeleteNamesActionPerformed
        try {
            this.order = Integer.parseInt(evt.getActionCommand());
        } catch (NumberFormatException e) {
            System.err.println("Bad order!");
        }
        this.times = bestTimes.getTime(this.order);
        deletePlayerTime();
    }//GEN-LAST:event_JTextFieldDeleteNamesActionPerformed

    private void jButtonSECActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSECActionPerformed
        try {
            this.times = Integer.parseInt(JTextFieldDeleteTimes.getText());
        } catch (NumberFormatException e) {
            System.err.println("Wrong time format!");
        }
        deletePlayerTime();
    }//GEN-LAST:event_jButtonSECActionPerformed

    private void jButtonPOSTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPOSTActionPerformed
        try {
            this.order = Integer.parseInt(JTextFieldDeleteNames.getText());
        } catch (NumberFormatException e) {
            System.err.println("Bad order!");
        }
        this.times = bestTimes.getTime(this.order);
        deletePlayerTime();
    }//GEN-LAST:event_jButtonPOSTActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField JTextFieldDeleteNames;
    private javax.swing.JTextField JTextFieldDeleteTimes;
    private java.awt.Button button1;
    private java.awt.Button closeButton;
    private javax.swing.JButton jButtonPOST;
    private javax.swing.JButton jButtonSEC;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
